# apiVersion: v1
# kind: Namespace
# metadata:
#   name: pdf-editor-ns

---

apiVersion: v1
kind: Service
metadata:
  name: backend-merge
  namespace: pdf-editor-ns
  labels:
    service: backend-merge
spec:
  selector:
    app: backend-merge
  ports:
  - port: 8080
    name: web
    targetPort: backend-port
    protocol: TCP

---

apiVersion: v1
kind: Service
metadata:
  name: backend-rotate
  namespace: pdf-editor-ns
  labels:
    service: backend-rotate
spec:
  selector:
    app: backend-rotate
  ports:
  - port: 8081
    name: web
    targetPort: backend-port
    protocol: TCP

---

apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: pdf-editor-backend-merge
  namespace: pdf-editor-ns
  labels:
    app: backend-merge
spec:
  replicas: 2
  strategy:
    blueGreen:
      # activeService specifies the service to update with the new template hash at time of promotion.
      # This field is mandatory for the blueGreen update strategy.
      activeService: backend-merge
      # previewService specifies the service to update with the new template hash before promotion.
      # This allows the preview stack to be reachable without serving production traffic.
      # This field is optional.
      previewService: backend-merge-preview
      # autoPromotionEnabled disables automated promotion of the new stack by pausing the rollout
      # immediately before the promotion. If omitted, the default behavior is to promote the new
      # stack as soon as the ReplicaSet are completely ready/available.
      # Rollouts can be resumed using: `kubectl argo rollouts promote ROLLOUT`
      autoPromotionEnabled: true
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: backend-merge
  template:
    metadata:
      labels:
        app: backend-merge
    spec:
      initContainers:
        - name: pdf-files
          image: docker.io/dipugodocker/pdf-editor:1.0-backend-merge
          volumeMounts:
          - name: backend
            mountPath: /mnt
          command: ["cp", "-vR", ".", "/mnt"]

      containers:
        - name: pdf-editor
          image: docker.io/dipugodocker/pdf-editor:1.0-backend-merge
          volumeMounts:
          - name: backend
            mountPath: /go/src/
          resources:
            requests:
                memory: "50Mi"
                cpu: "10m"
            limits:
              memory: "500Mi"
              cpu: "100m"
          livenessProbe:
            httpGet:
              port: 8080
              path: /greet
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              port: 8080
              path: /greet
            initialDelaySeconds: 5
            periodSeconds: 10
          ports:
            - containerPort: 8080
              name: backend-port
      volumes:
      - name: backend
        emptyDir: {}

---

apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: pdf-editor-rotator
  namespace: pdf-editor-ns
  labels:
    app: backend-rotate
spec:
  replicas: 2
  strategy:
    blueGreen:
      # activeService specifies the service to update with the new template hash at time of promotion.
      # This field is mandatory for the blueGreen update strategy.
      activeService: backend-rotate
      # previewService specifies the service to update with the new template hash before promotion.
      # This allows the preview stack to be reachable without serving production traffic.
      # This field is optional.
      previewService: backend-rotate-preview
      # autoPromotionEnabled disables automated promotion of the new stack by pausing the rollout
      # immediately before the promotion. If omitted, the default behavior is to promote the new
      # stack as soon as the ReplicaSet are completely ready/available.
      # Rollouts can be resumed using: `kubectl argo rollouts promote ROLLOUT`
      autoPromotionEnabled: true
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: backend-rotate
  template:
    metadata:
      labels:
        app: backend-rotate
    spec:
      initContainers:
        - name: pdf-files
          image: docker.io/dipugodocker/pdf-editor:1.0-backend-rotate
          volumeMounts:
          - name: backend
            mountPath: /mnt
          command: ["cp", "-vR", ".", "/mnt"]

      containers:
        - name: pdf-editor
          image: docker.io/dipugodocker/pdf-editor:1.0-backend-rotate
          volumeMounts:
          - name: backend
            mountPath: /go/src/
          resources:
            requests:
                memory: "50Mi"
                cpu: "10m"
            limits:
              memory: "500Mi"
              cpu: "100m"
          livenessProbe:
            httpGet:
              port: 8081
              path: /greet
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              port: 8081
              path: /greet
            initialDelaySeconds: 5
            periodSeconds: 10
          ports:
            - containerPort: 8081
              name: backend-port
      volumes:
      - name: backend
        emptyDir: {}

...
